#define _POSIX_C_SOURCE 200809
#include <signal.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <sys/wait.h>
static char *message = "CTRL-C Pressed\n";
void handler(int signum) { write(STDOUT_FILENO, message, strlen(message)); }

int main() {
// fork here if parent do the same child needs to send kill signal in infinite loop
  struct sigaction sa;
  sa.sa_handler = handler;
  sa.sa_flags = 0;
  sigemptyset(&sa.sa_mask);

  int ret = sigaction(SIGINT, &sa, NULL);
  if (ret == -1) {
    perror("Sigaction() failed");
    exit(1);
  }

  while (1) {
    sleep(1);
  }
}
